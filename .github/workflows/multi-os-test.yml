name: Multi-OS Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
        exclude:
          # Exclude some combinations to reduce CI time
          - os: windows-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.12"

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          tesseract-ocr \
          tesseract-ocr-eng \
          poppler-utils \
          libgl1-mesa-glx \
          libglib2.0-0
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install tesseract poppler
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows dependencies are handled by the Python packages
        echo "Windows system dependencies handled by Python packages"
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov reportlab pillow
    
    - name: Download spaCy model
      run: |
        python -m spacy download en_core_web_lg
    
    - name: Setup test data
      run: |
        python .github/scripts/setup_test_data.py
    
    - name: Run CLI tests
      run: |
        cd test
        python test.py
    
    - name: Run tests with pytest
      run: |
        pytest test/test.py -v --tb=short
