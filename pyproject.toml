[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "doc_redaction"
version = "1.3.0"
description = "Redact PDF/image-based documents, Word, or CSV/XLSX files using a Gradio-based GUI interface"
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    "pdfminer.six==20250506",
    "pdf2image==1.17.0",
    "pymupdf==1.26.4",
    "opencv-python==4.12.0.88",
    "presidio_analyzer==2.2.360",
    "presidio_anonymizer==2.2.360",
    "presidio-image-redactor==0.0.57",
    "pikepdf==9.11.0",
    "pandas==2.3.2",
    "scikit-learn==1.7.2",
    "spacy==3.8.7",
    # Direct URL dependency for spacy model
    "en_core_web_lg @ https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.8.0/en_core_web_lg-3.8.0.tar.gz",
    "gradio==5.47.2",
    "boto3==1.40.41",
    "pyarrow==21.0.0",
    "openpyxl==3.1.5",
    "Faker==37.8.0",
    "python-levenshtein==0.27.1",
    "spaczz==0.6.1",
    # Direct URL dependency for gradio_image_annotator wheel
    "gradio_image_annotation @ https://github.com/seanpedrick-case/gradio_image_annotator/releases/download/v0.3.3/gradio_image_annotation-0.3.3-py3-none-any.whl",
    "rapidfuzz==3.14.1",
    "python-dotenv==1.0.1",
    "awslambdaric==3.1.1",
    "python-docx==1.2.0",
    "polars==1.33.1",
    "defusedxml==0.7.1",
    #"paddlepaddle==3.2.0", # Optional paddle imports - only if you want to use hybrid OCR mode with tesseract and paddleOCR
    #"paddleocr==3.2.0"    
]

[project.urls]
Homepage = "https://seanpedrick-case.github.io/doc_redaction/"
repository = "https://github.com/seanpedrick-case/doc_redaction"

[project.optional-dependencies]
dev = ["pytest"]
test = ["pytest", "pytest-cov"]

# Configuration for Ruff linter:
[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = [
    "E501",  # line-too-long (handled with Black)
    "E402",  # module-import-not-at-top-of-file (sometimes needed for conditional imports)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

# Configuration for a Black formatter:
[tool.black]
line-length = 88
target-version = ['py310']

# Configuration for pytest:
[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:click.parser",
    "ignore::DeprecationWarning:weasel.util.config",
    "ignore::DeprecationWarning:builtin type",
    "ignore::DeprecationWarning:websockets.legacy",
    "ignore::DeprecationWarning:websockets.server",
    "ignore::DeprecationWarning:spacy.cli._util",
    "ignore::DeprecationWarning:weasel.util.config",
    "ignore::DeprecationWarning:importlib._bootstrap",
]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]